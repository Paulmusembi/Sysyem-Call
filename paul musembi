#include <stdio.h>   // Include standard input/output library
#include <stdlib.h>  // Include standard library for exit function
#include <unistd.h>  // Include library for system calls (open, read, write, close)

int main() {
    int file_descriptor;   // File descriptor to hold the return value of open() system call
    char buffer[100];      // Buffer to hold the data read from the file

    // Open a file for writing (create if it doesn't exist, truncate if it exists)
    file_descriptor = open("example.txt", O_CREAT | O_WRONLY | O_TRUNC, 0644);
    if (file_descriptor == -1) {  // Check if open() failed
        perror("Error opening file");  // Print error message
        exit(EXIT_FAILURE);  // Exit the program with failure status
    }

    // Write "Hello World" to the file
    write(file_descriptor, "Hello World\n", 12);

    // Close the file
    close(file_descriptor);

    // Open the file for reading
    file_descriptor = open("example.txt", O_RDONLY);
    if (file_descriptor == -1) {  // Check if open() failed
        perror("Error opening file");  // Print error message
        exit(EXIT_FAILURE);  // Exit the program with failure status
    }

    // Read from the file into the buffer
    int bytes_read = read(file_descriptor, buffer, sizeof(buffer));
    if (bytes_read == -1) {  // Check if read() failed
        perror("Error reading from file");  // Print error message
        exit(EXIT_FAILURE);  // Exit the program with failure status
    }

    // Close the file
    close(file_descriptor);

    // Print the read content
    printf("Read from file: %s", buffer);

    return 0;  // Return success status
}
